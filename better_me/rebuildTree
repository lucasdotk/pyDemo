# Definition for a binary tree node.
from typing import List


class TreeNode:
    def __init__(self, val=0, left=None, right=None):
        self.val = val
        self.left = left
        self.right = right


class Solution:
    def buildTree(self, preorder: List[int], inorder: List[int]) -> TreeNode:
        def build(pre_left, pre_right, in_left, in_right) -> TreeNode:
            root = pre_left
            in_root = in_map[preorder[pre_left]]

            root = TreeNode(preorder[root])


        in_len = len(preorder)

        in_map = {i: v for i, v in enumerate(inorder)}
        return build(0, in_len - 1, 0, in_len - 1)


